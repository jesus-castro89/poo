@startuml

abstract class Animal {
    # nombre: String
    # edad: int
    + {abstract} comer(): void
    + final dormir(): void
}
interface Swimeable {
    + nadar(): void
}
interface Flyable {
    + RESISTENCIA_VIENTO = 8.71: double
    + volar(): void
}
class Dog extends Mammal {
    # raza: String
    + ladrar(): void
    + comer(): void
}
class Cat extends Mammal {
    # color: String
    + maullar(): void
    + comer(): void
}
abstract class Bird extends Animal {
    # especie: String
    + volar(): void
}
class Hawk extends Bird implements Flyable {
    + cazar(): void
    + comer(): void
}
class Parrot extends Bird implements Flyable {
    + hablar(): void
    + comer(): void
}
abstract class Fish extends Animal implements Swimeable {
    # tipoAgua: String
}
class Salmon extends Fish {
    + migrar(): void
    + comer(): void
}
class Pinguin <<final>> extends Bird implements Swimeable {
    + nadar(): void
}
class Mammal extends Animal {
    # pelaje: String
    + amamantar(): void
}

class Bat extends Mammal implements Flyable {
    + volar(): void
}
class CanadianSalmon extends Salmon {
    + nadarContraCorriente(): void
}

class Airplane implements Flyable {
    + volar(): void
}
@enduml